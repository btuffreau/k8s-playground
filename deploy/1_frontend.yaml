---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: frontend-role
  namespace: aetion
rules:
  - apiGroups:
      - ""
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: frontend-grants
  namespace: aetion
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: frontend-role
subjects:
  - kind: ServiceAccount
    name: frontend-auth
    namespace: aetion
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-auth
  namespace: aetion
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::000000000000:role/frontend-auth
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: aetion
  labels:
    app: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      serviceAccountName: frontend-auth
      nodeSelector:
        environment: "lab"
      containers:
        - image: "kind-registry:5000/awesome_app:latest"
          imagePullPolicy: Always
          name: "awesome-app"
          ports:
            - name: http
              containerPort: 8000
          resources:
            requests:
              memory: "200Mi"
              cpu: "0.2"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: aetion
spec:
  selector:
    app: frontend
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 8000